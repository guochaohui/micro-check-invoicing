server:
  #指定服务启动端口
  port: 11986
  compression:
    enabled: true
    mime-types: 'text/html,text/xml,text/css,text/javascript,text/plain'
  tomcat:
    max-connections: 1000
    max-threads: 800
  
spring:
  application:
    #micro-test-tool 定义应用程序名称(在POM文件中加载，需要在POM文件中配置插件实现 见 ‘maven-resources-plugin’)
    name: '@pom.name@'
  profiles:
    #设定默认激活的profile
    active: local
    include: interface
  http:
    multipart:
      maxFileSize: 1024MB
      maxRequestSize: 1024MB
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML5
    encoding: UTF-8
    content-type: text/html
  boot:
    admin:
      client:
        #服务在admin管理优先使用IP注册
        prefer-ip: true

management:
  health:
    redis:
      enabled: false
  security:
    #管理后台安全认证关闭
    enabled: false

endpoints: 
  shutdown:
    enabled: true     #启动shutdown
    sensitive: false  #禁用密码验证

security:
  basic:
    #禁用springboot安全
    enabled: false

logging:
  #logback配置文件
  config: classpath:logback-spring.xml
  #日志文件名称
  file: '@pom.name@'
  #日志文件路径
  path: '/xs/logs/@pom.name@/'
  #日志文件级别（在bootstrap文件中可以配置默认值，可以在application.yml中进行覆盖，或是在执行的profile配置中覆盖）
  #注意：不要修改此处配置，如果想修改执行环境的日志级别，可修改执行profile中的日志级别，覆盖此默认配置
  #可选配置：TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
  level:
    root: INFO

#项目信息，用info做前缀的配置将在admin管理后台中进行显示，属性可以自己定义没有强制要求，例如可以设置info.contact.email
info:
  build:
    name: '@pom.name@'
    description: '@pom.description@'
    version: '@pom.version@'

#此处是应用程序配置属性入口，原则上应用自己的配置属性均应该用app.conf开头
app:
  conf:


---
spring:
  #指定本地电脑配置
  profiles: local
#日志配置（此配置将覆盖bootstrap.yml中的配置）
logging:
  level:
    root: INFO
#此处是应用程序配置属性入口，原则上应用自己的配置属性均应该用app.conf开头
app:
  conf:

